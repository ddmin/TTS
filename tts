#!/usr/bin/python3

import os
import time
import re
import threading

import tkinter
from tkinter import *
from tkinter.filedialog import askopenfilename
import pdftotext

# current page in pdf
current_pdf = ""
currentPage = 1
pageCount = 0
reading = False

# GUI
root = Tk()
root.title('TTS')
root.geometry("1400x800")

# menu
menu = Menu(root)
root.config(menu=menu)

# update page count
def update_page():
    page_format = f'{currentPage}'
    page_box.delete(1.0, tkinter.END)
    page_box.insert(1.0, page_format)

    count_format = f'/{pageCount}'
    count_box.delete(1.0, tkinter.END)
    count_box.insert(1.0, count_format)

# open pdf file
def open_pdf():
    global current_pdf
    global pageCount
    global currentPage
    filelocation = askopenfilename(initialdir="~", title="Select PDF",
            filetypes=(
                ("PDF Files", "*.pdf"),
                ("All Files", "*.*")))

    with open(filelocation, "rb") as f:
        current_pdf = pdftotext.PDF(f)

    currentPage = 1
    pageCount = len(current_pdf)
    pdf_text = current_pdf[currentPage-1]
    text.delete(1.0, tkinter.END)
    text.insert(1.0, pdf_text)
    update_page()

# previous page function
def prevPage():
    global current_pdf
    global currentPage
    if currentPage > 1:
        currentPage -= 1
        pdf_text = current_pdf[currentPage-1]
        text.delete(1.0, tkinter.END)
        text.insert(1.0, pdf_text)
        update_page()
    else:
        pass

# next page function
def nextPage():
    global current_pdf
    global currentPage
    global pageCount
    if currentPage < pageCount:
        currentPage += 1
        pdf_text = current_pdf[currentPage-1]
        text.delete(1.0, tkinter.END)
        text.insert(1.0, pdf_text)
        update_page()

# wrapper for read_aloud
def read_aloud_background():
    global reading
    if not reading:
        reading = True
        t = threading.Thread(target=read_aloud)
        t.start()
    elif reading:
        reading = False


# read contents
def read_aloud():
    global reading
    save_file = "/tmp/tts_read_file.mp3"

    current_text = text.get(1.0, tkinter.END+"-1c")
    if current_text:
        # split sentences
        for sentence in re.split('[\.,!?\t\n\r]', current_text):
            sentence.lstrip().rstrip()
            if sentence and reading:
                print("Reading:", sentence)

                # gtts-cli (alternative: espeak)
                if os.path.exists(save_file):
                    os.system(f'rm {save_file}')
                os.system(f'gtts-cli "{sentence}" > {save_file}')
                while not os.path.exists(save_file):
                    print('sleeping')
                    time.sleep(1)
                os.system(f'mpv {save_file}')
    reading = False

# jump to page
def jump_text():
    global current_pdf
    global currentPage
    global pageCount
    current_page = int(page_box.get(1.0, tkinter.END))
    if current_page:
        if current_page <= pageCount and currentPage >= 1:
            currentPage = current_page
            pdf_text = current_pdf[currentPage-1]
            text.delete(1.0, tkinter.END)
            text.insert(1.0, pdf_text)
            update_page()
    else:
        pass


# buttons
button_frame = Frame(root)
button_frame.pack(fill=tkinter.X, side=tkinter.TOP)

prev_page_button = Button(button_frame, text="Prev", command=prevPage, bg="pink")
next_page_button = Button(button_frame, text="Next", command=nextPage, bg="lightblue")

read_page_button = Button(button_frame, text="Read", command=read_aloud_background, bg="lightgreen")
jump_page_button = Button(button_frame, text="Jump", command=jump_text, bg="orange")

button_frame.columnconfigure(0, weight=1)
button_frame.columnconfigure(1, weight=1)
button_frame.columnconfigure(2, weight=1)
button_frame.columnconfigure(3, weight=1)

prev_page_button.grid(row=0, column=0, sticky=tkinter.W+tkinter.E)
next_page_button.grid(row=0, column=1, sticky=tkinter.W+tkinter.E)
read_page_button.grid(row=0, column=2, sticky=tkinter.W+tkinter.E)
jump_page_button.grid(row=0, column=3, sticky=tkinter.W+tkinter.E)

# page box
page_frame = Frame(root)
page_frame.pack(side=tkinter.TOP)

page_box = Text(page_frame, height=1, width=5)
count_box = Text(page_frame, height=1, width=5)

page_frame.columnconfigure(0, weight=1)
page_frame.columnconfigure(1, weight=1)

page_box.grid(row=0, column=0, sticky=tkinter.W+tkinter.E)
count_box.grid(row=0, column=1, sticky=tkinter.W+tkinter.E)

# textbox
text = Text(root, height=600, width=750)
text.pack()

# dropdowns
file_menu = Menu(menu, tearoff=False)
menu.add_cascade(label="File", menu=file_menu)
file_menu.add_command(label="Open PDF", command=open_pdf)
file_menu.add_separator()
file_menu.add_command(label="Exit", command=root.quit)

root.mainloop()
